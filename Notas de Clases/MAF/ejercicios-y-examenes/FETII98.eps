%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 288 177
%%HiResBoundingBox: 0 0 288 177.9375
%%Creator: (Mathematica NeXT 3.0)
%%Title: Clipboard
%%CreationDate: (Sometime) (Sometime)
%%DocumentNeededResources: (atend)
%%DocumentFonts: (atend)
%%DocumentNeededFonts: (atend)
%%EndComments
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def
/Mnodistort true def
/colorimage where
{ pop /Mcolorimage {colorimage} bind def /Mimage {image} bind def}
{
/colorimage {Mcolorimage} bind def
} ifelse
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		288.000000 def
/Mheight	177.937500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.02381 0.039683 0.250916 0.811258 [
[.22222 .23842 -3 -9 ]
[.22222 .23842 3 0 ]
[.42063 .23842 -6 -9 ]
[.42063 .23842 6 0 ]
[.61905 .23842 -6 -9 ]
[.61905 .23842 6 0 ]
[.81746 .23842 -6 -9 ]
[.81746 .23842 6 0 ]
[.01131 .00754 -24 -4.5 ]
[.01131 .00754 0 4.5 ]
[.01131 .08866 -24 -4.5 ]
[.01131 .08866 0 4.5 ]
[.01131 .16979 -24 -4.5 ]
[.01131 .16979 0 4.5 ]
[.01131 .33204 -18 -4.5 ]
[.01131 .33204 0 4.5 ]
[.01131 .41317 -18 -4.5 ]
[.01131 .41317 0 4.5 ]
[.01131 .49429 -18 -4.5 ]
[.01131 .49429 0 4.5 ]
[.01131 .57542 -18 -4.5 ]
[.01131 .57542 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.22222 .25092 m
.22222 .25717 L
s
[(5)] .22222 .23842 0 1 Mshowa
.42063 .25092 m
.42063 .25717 L
s
[(10)] .42063 .23842 0 1 Mshowa
.61905 .25092 m
.61905 .25717 L
s
[(15)] .61905 .23842 0 1 Mshowa
.81746 .25092 m
.81746 .25717 L
s
[(20)] .81746 .23842 0 1 Mshowa
.125 Mabswid
.06349 .25092 m
.06349 .25467 L
s
.10317 .25092 m
.10317 .25467 L
s
.14286 .25092 m
.14286 .25467 L
s
.18254 .25092 m
.18254 .25467 L
s
.2619 .25092 m
.2619 .25467 L
s
.30159 .25092 m
.30159 .25467 L
s
.34127 .25092 m
.34127 .25467 L
s
.38095 .25092 m
.38095 .25467 L
s
.46032 .25092 m
.46032 .25467 L
s
.5 .25092 m
.5 .25467 L
s
.53968 .25092 m
.53968 .25467 L
s
.57937 .25092 m
.57937 .25467 L
s
.65873 .25092 m
.65873 .25467 L
s
.69841 .25092 m
.69841 .25467 L
s
.7381 .25092 m
.7381 .25467 L
s
.77778 .25092 m
.77778 .25467 L
s
.85714 .25092 m
.85714 .25467 L
s
.89683 .25092 m
.89683 .25467 L
s
.93651 .25092 m
.93651 .25467 L
s
.97619 .25092 m
.97619 .25467 L
s
.25 Mabswid
0 .25092 m
1 .25092 L
s
.02381 .00754 m
.03006 .00754 L
s
[(-0.3)] .01131 .00754 1 0 Mshowa
.02381 .08866 m
.03006 .08866 L
s
[(-0.2)] .01131 .08866 1 0 Mshowa
.02381 .16979 m
.03006 .16979 L
s
[(-0.1)] .01131 .16979 1 0 Mshowa
.02381 .33204 m
.03006 .33204 L
s
[(0.1)] .01131 .33204 1 0 Mshowa
.02381 .41317 m
.03006 .41317 L
s
[(0.2)] .01131 .41317 1 0 Mshowa
.02381 .49429 m
.03006 .49429 L
s
[(0.3)] .01131 .49429 1 0 Mshowa
.02381 .57542 m
.03006 .57542 L
s
[(0.4)] .01131 .57542 1 0 Mshowa
.125 Mabswid
.02381 .02376 m
.02756 .02376 L
s
.02381 .03999 m
.02756 .03999 L
s
.02381 .05621 m
.02756 .05621 L
s
.02381 .07244 m
.02756 .07244 L
s
.02381 .10489 m
.02756 .10489 L
s
.02381 .12111 m
.02756 .12111 L
s
.02381 .13734 m
.02756 .13734 L
s
.02381 .15356 m
.02756 .15356 L
s
.02381 .18602 m
.02756 .18602 L
s
.02381 .20224 m
.02756 .20224 L
s
.02381 .21847 m
.02756 .21847 L
s
.02381 .23469 m
.02756 .23469 L
s
.02381 .26714 m
.02756 .26714 L
s
.02381 .28337 m
.02756 .28337 L
s
.02381 .29959 m
.02756 .29959 L
s
.02381 .31582 m
.02756 .31582 L
s
.02381 .34827 m
.02756 .34827 L
s
.02381 .36449 m
.02756 .36449 L
s
.02381 .38072 m
.02756 .38072 L
s
.02381 .39694 m
.02756 .39694 L
s
.02381 .42939 m
.02756 .42939 L
s
.02381 .44562 m
.02756 .44562 L
s
.02381 .46184 m
.02756 .46184 L
s
.02381 .47807 m
.02756 .47807 L
s
.02381 .51052 m
.02756 .51052 L
s
.02381 .52674 m
.02756 .52674 L
s
.02381 .54297 m
.02756 .54297 L
s
.02381 .55919 m
.02756 .55919 L
s
.02381 .59164 m
.02756 .59164 L
s
.02381 .60787 m
.02756 .60787 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .25092 m
.02499 .25092 L
.02605 .25092 L
.02729 .25093 L
.02846 .25094 L
.02954 .25097 L
.03053 .251 L
.03163 .25104 L
.03279 .25111 L
.03395 .2512 L
.0352 .25131 L
.03746 .2516 L
.03884 .25183 L
.04016 .25208 L
.04262 .25269 L
.045 .25344 L
.04753 .25445 L
.0521 .25685 L
.05752 .26082 L
.06244 .26561 L
.07287 .27991 L
.07874 .29062 L
.08414 .30221 L
.10458 .36014 L
.125 .43421 L
.14407 .506 L
.16239 .56389 L
.16767 .57668 L
.17267 .58674 L
.17716 .59388 L
.17951 .59686 L
.18204 .59946 L
.18327 .60049 L
.18457 .6014 L
.18577 .6021 L
.18689 .6026 L
.18794 .60296 L
.18906 .6032 L
.19031 .60332 L
.19144 .60328 L
.19209 .60319 L
.19277 .60304 L
.194 .60265 L
.19532 .60205 L
.19678 .60115 L
.19938 .59895 L
.20181 .5962 L
.20711 .58788 L
.21194 .5775 L
.22282 .54476 L
Mistroke
.23269 .50463 L
.24184 .45984 L
.26258 .33986 L
.28142 .2242 L
.30176 .11416 L
.31294 .06781 L
.31784 .05164 L
.32322 .03711 L
.32567 .03164 L
.3283 .02661 L
.33057 .02297 L
.33304 .01976 L
.33449 .01824 L
.33582 .01708 L
.33708 .0162 L
.33774 .01581 L
.33846 .01546 L
.3397 .01502 L
.34086 .01478 L
.3415 .01472 L
.34218 .01472 L
.3434 .01486 L
.34464 .0152 L
.34534 .01548 L
.34598 .01579 L
.34714 .01649 L
.34842 .01745 L
.35063 .0196 L
.35297 .02254 L
.35825 .0316 L
.36318 .04297 L
.37205 .06988 L
.38156 .10669 L
.40135 .20074 L
.42289 .30909 L
.43291 .35399 L
.44356 .39399 L
.45265 .42006 L
.45783 .4311 L
.46035 .43541 L
.4627 .43879 L
.46515 .44165 L
.46739 .44365 L
.46866 .44454 L
.46987 .44521 L
.47114 .44573 L
.47185 .44594 L
.47252 .44608 L
.47375 .44621 L
.47491 .44617 L
Mistroke
.47617 .44596 L
.47689 .44575 L
.47754 .44551 L
.47884 .44489 L
.48027 .444 L
.48286 .44178 L
.4853 .43901 L
.4875 .43595 L
.49245 .42721 L
.50136 .40543 L
.51139 .37281 L
.52062 .33698 L
.54144 .24576 L
.56188 .16087 L
.57186 .12747 L
.58095 .1039 L
.58546 .09499 L
.58784 .09109 L
.59037 .08756 L
.59257 .08502 L
.595 .08278 L
.59607 .082 L
.59722 .08129 L
.59822 .08077 L
.59929 .08034 L
.60053 .08 L
.60168 .07981 L
.60238 .07977 L
.60304 .07978 L
.60429 .07991 L
.6056 .08023 L
.60681 .08068 L
.60814 .08135 L
.60954 .08225 L
.61186 .08418 L
.61402 .08646 L
.61894 .09334 L
.62393 .10262 L
.62936 .11518 L
.63924 .14379 L
.65779 .2116 L
.67916 .29631 L
.6985 .36063 L
.70822 .38369 L
.71369 .39323 L
.71628 .39683 L
.71871 .39963 L
.72102 .40179 L
.72312 .40332 L
.72424 .40397 L
Mistroke
.72545 .40453 L
.72674 .40497 L
.72795 .40525 L
.72912 .40538 L
.73041 .40537 L
.73106 .40531 L
.73176 .40519 L
.73302 .40487 L
.73428 .40441 L
.73547 .40382 L
.7377 .40237 L
.74029 .40012 L
.74273 .39744 L
.74729 .39102 L
.75219 .38216 L
.7575 .37045 L
.77589 .31621 L
.79542 .24577 L
.80578 .2086 L
.81688 .17243 L
.82755 .14368 L
.83729 .12428 L
.84198 .11761 L
.84445 .11484 L
.84708 .11246 L
.84937 .11088 L
.85067 .11019 L
.85189 .10967 L
.85301 .10931 L
.85404 .10909 L
.85517 .10894 L
.85635 .10891 L
.85758 .10901 L
.85828 .10913 L
.85892 .10927 L
.8601 .10963 L
.86135 .11014 L
.86351 .11135 L
.86589 .11315 L
.86843 .11559 L
.87116 .11881 L
.87608 .12614 L
.88568 .14554 L
.89445 .16835 L
.91507 .23423 L
.9342 .29821 L
.94373 .32651 L
.95271 .34901 L
.95768 .35934 L
.96306 .36856 L
Mistroke
.96794 .37506 L
.97008 .37732 L
.97243 .37938 L
.97619 .38175 L
Mfstroke
% End of Graphics
MathPictureEnd
%%PSTrailer
end
grestore

%%EPS Trailer
